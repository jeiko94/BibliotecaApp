/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package bibliotecaapp.vista;

import bibliotecaapp.controlador.ControladorLibro;
import bibliotecaapp.modelo.Libro;
import java.awt.Container;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yeisson.villamil
 */
public class DashboardLibros extends javax.swing.JPanel {

    private ControladorLibro controladorLibro;
    private DefaultTableModel modelo;

    public DashboardLibros() {
        initComponents();

        controladorLibro = new ControladorLibro();


        modelo = (DefaultTableModel) tablaLibros.getModel();
        // Definir las columnas de la tabla
        modelo.setColumnIdentifiers(new Object[]{"Título", "Autor", "ISBN"});

        // Cargar los datos iniciales (si los hubiera)
        actualizarTabla();
    }

    private void actualizarTabla() {
        // Limpia todas las filas actuales
        modelo.setRowCount(0);

        // Itera sobre la lista de libros y agrega una fila por cada libro
        for (Libro libro : controladorLibro.getListaLibros()) {
            modelo.addRow(new Object[]{libro.getTitulo(), libro.getAutor(), libro.getIsbn()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaLibros = new javax.swing.JTable();
        botonAgregarLibro = new javax.swing.JButton();
        botonModificarLibro = new javax.swing.JButton();
        botonEliminarLibro = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        campoTitulo = new javax.swing.JTextField();
        campoAutor = new javax.swing.JTextField();
        campoISBN = new javax.swing.JTextField();
        botonCerrarSesion = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Roboto", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 51));
        jLabel1.setText("Gestión de Libros");

        tablaLibros.setBackground(new java.awt.Color(204, 204, 255));
        tablaLibros.setFont(new java.awt.Font("Roboto SemiBold", 0, 14)); // NOI18N
        tablaLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaLibros);

        jScrollPane1.setViewportView(jScrollPane2);

        botonAgregarLibro.setBackground(new java.awt.Color(204, 204, 204));
        botonAgregarLibro.setFont(new java.awt.Font("Roboto", 3, 14)); // NOI18N
        botonAgregarLibro.setText("Agregar");
        botonAgregarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarLibroActionPerformed(evt);
            }
        });

        botonModificarLibro.setBackground(new java.awt.Color(204, 204, 204));
        botonModificarLibro.setFont(new java.awt.Font("Roboto", 3, 14)); // NOI18N
        botonModificarLibro.setText("Modificar");
        botonModificarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarLibroActionPerformed(evt);
            }
        });

        botonEliminarLibro.setBackground(new java.awt.Color(204, 204, 204));
        botonEliminarLibro.setFont(new java.awt.Font("Roboto", 3, 14)); // NOI18N
        botonEliminarLibro.setText("Eliminar");
        botonEliminarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarLibroActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 0, 153));
        jLabel2.setText("Título:");

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 0, 153));
        jLabel3.setText("Autor:");

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 0, 153));
        jLabel4.setText("ISBN:");

        botonCerrarSesion.setBackground(new java.awt.Color(204, 204, 204));
        botonCerrarSesion.setFont(new java.awt.Font("Roboto", 3, 14)); // NOI18N
        botonCerrarSesion.setText("Cerrar sesión");
        botonCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCerrarSesionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(botonAgregarLibro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                        .addComponent(botonModificarLibro)
                        .addGap(70, 70, 70)
                        .addComponent(botonEliminarLibro)
                        .addGap(70, 70, 70)
                        .addComponent(botonCerrarSesion))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(173, 173, 173)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(campoTitulo)
                    .addComponent(campoAutor)
                    .addComponent(campoISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(campoTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(6, 6, 6))
                    .addComponent(campoAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(campoISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAgregarLibro)
                    .addComponent(botonModificarLibro)
                    .addComponent(botonEliminarLibro)
                    .addComponent(botonCerrarSesion))
                .addContainerGap(85, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void botonAgregarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarLibroActionPerformed
        // Obtiene los datos de los campos de entrada
        String titulo = campoTitulo.getText().trim();
        String autor = campoAutor.getText().trim();
        String isbn = campoISBN.getText().trim();

        // Verifica que ningún campo esté vacío
        if (titulo.isEmpty() || autor.isEmpty() || isbn.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Complete todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Crea un nuevo objeto Libro y lo agrega al controlador
        Libro libro = new Libro(titulo, autor, isbn);
        controladorLibro.agregarLibro(libro);

        // Actualiza la tabla para reflejar el nuevo libro
        actualizarTabla();

        // Limpia los campos de entrada para un nuevo registro
        campoTitulo.setText("");
        campoAutor.setText("");
        campoISBN.setText("");
    }//GEN-LAST:event_botonAgregarLibroActionPerformed

    private void botonEliminarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarLibroActionPerformed
        // Obtiene la fila seleccionada en la tabla
        int filaSeleccionada = tablaLibros.getSelectedRow();
        if (filaSeleccionada >= 0) {
            // Se asume que la columna 2 contiene el ISBN
            String isbn = (String) modelo.getValueAt(filaSeleccionada, 2);
            // Llama al controlador para eliminar el libro por ISBN
            controladorLibro.eliminarLibro(isbn);
            // Actualiza la tabla
            actualizarTabla();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un libro para eliminar", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonEliminarLibroActionPerformed

    private void botonModificarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarLibroActionPerformed
        // Verifica que se haya seleccionado una fila
        int filaSeleccionada = tablaLibros.getSelectedRow();
        if (filaSeleccionada >= 0) {
            // Obtiene el ISBN del libro seleccionado (columna 2)
            String isbnSeleccionado = (String) modelo.getValueAt(filaSeleccionada, 2);
            // Busca el libro en el controlador
            Libro libro = controladorLibro.buscarLibroPorISBN(isbnSeleccionado);
            if (libro != null) {
                // Obtén los nuevos datos de los campos de entrada
                String nuevoTitulo = campoTitulo.getText().trim();
                String nuevoAutor = campoAutor.getText().trim();
                String nuevoISBN = campoISBN.getText().trim();

                if (nuevoTitulo.isEmpty() || nuevoAutor.isEmpty() || nuevoISBN.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Complete todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                // Actualiza los datos del libro
                libro.setTitulo(nuevoTitulo);
                libro.setAutor(nuevoAutor);
                libro.setIsbn(nuevoISBN);

                // Actualiza la tabla para reflejar los cambios
                actualizarTabla();

                // Limpia los campos de entrada
                campoTitulo.setText("");
                campoAutor.setText("");
                campoISBN.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un libro para modificar", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonModificarLibroActionPerformed

    private void botonCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCerrarSesionActionPerformed
        int confirmacion = JOptionPane.showConfirmDialog(this,
                "¿Desea cerrar sesión?", "Cerrar sesión", JOptionPane.YES_NO_OPTION);
        if (confirmacion == JOptionPane.YES_OPTION) {
            // Se obtiene el contenedor padre, que es el JTabbedPane donde está agregado este panel.
            Container parent = this.getParent();
            if (parent instanceof JTabbedPane) {
                JTabbedPane tabbedPane = (JTabbedPane) parent;
                // Se elimina este dashboard (la pestaña actual)
                tabbedPane.remove(this);
                // Se selecciona la pestaña principal. Asumiremos que la pestaña 0 es "Registro" o "Login"
                tabbedPane.setSelectedIndex(0);
            }
        }
    }//GEN-LAST:event_botonCerrarSesionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregarLibro;
    private javax.swing.JButton botonCerrarSesion;
    private javax.swing.JButton botonEliminarLibro;
    private javax.swing.JButton botonModificarLibro;
    private javax.swing.JTextField campoAutor;
    private javax.swing.JTextField campoISBN;
    private javax.swing.JTextField campoTitulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaLibros;
    // End of variables declaration//GEN-END:variables
}
