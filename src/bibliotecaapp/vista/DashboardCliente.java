/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package bibliotecaapp.vista;

import bibliotecaapp.controlador.ControladorLibro;
import bibliotecaapp.modelo.Libro;
import bibliotecaapp.modelo.Usuario;
import java.awt.Container;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yeisson.villamil
 */
public class DashboardCliente extends javax.swing.JPanel {

    private Usuario usuario;
    private ControladorLibro controladorLibro;

    // Modelos para las tablas
    private DefaultTableModel modeloDisponibles;
    private DefaultTableModel modeloPrestados;
    private DefaultTableModel modeloDevueltos;

    public DashboardCliente(Usuario usuario) {
        initComponents();
        this.usuario = usuario;

        // Usamos la misma instancia compartida de libros (por ejemplo, con una lista estática)
        controladorLibro = new ControladorLibro();

        // Configurar modelos de tabla (se asume que has colocado tres JTables en un JTabbedPane)
        // Por ejemplo, los nombres de variable de los JTables son:
        //   tablaLibrosDisponibles, tablaLibrosPrestados y tablaLibrosDevueltos.
        modeloDisponibles = (DefaultTableModel) tablaLibrosDisponibles.getModel();
        modeloPrestados = (DefaultTableModel) tablaLibrosPrestados.getModel();
        modeloDevueltos = (DefaultTableModel) tablaLibrosDevueltos.getModel();

        modeloDisponibles.setColumnIdentifiers(new Object[]{"Título", "Autor", "ISBN"});
        modeloPrestados.setColumnIdentifiers(new Object[]{"Título", "Autor", "ISBN"});
        modeloDevueltos.setColumnIdentifiers(new Object[]{"Título", "Autor", "ISBN"});

        actualizarTablaDisponibles();
        actualizarTablaPrestados();
        actualizarTablaDevueltos();
    }

    // Métodos para actualizar cada tabla (se explican a continuación)
    private void actualizarTablaDisponibles() {
        modeloDisponibles.setRowCount(0);
        for (Libro libro : controladorLibro.getListaLibros()) {
            modeloDisponibles.addRow(new Object[]{libro.getTitulo(), libro.getAutor(), libro.getIsbn()});
        }
    }

    private void actualizarTablaPrestados() {
        modeloPrestados.setRowCount(0);
        for (Libro libro : usuario.getLibrosPrestados()) {
            modeloPrestados.addRow(new Object[]{libro.getTitulo(), libro.getAutor(), libro.getIsbn()});
        }
    }

    private void actualizarTablaDevueltos() {
        modeloDevueltos.setRowCount(0);
        for (Libro libro : usuario.getLibrosDevueltos()) {
            modeloDevueltos.addRow(new Object[]{libro.getTitulo(), libro.getAutor(), libro.getIsbn()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaLibrosDisponibles = new javax.swing.JTable();
        botonPedirPrestado = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        botonCerrarSesion = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaLibrosPrestados = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        botonDevolverLibro = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaLibrosDevueltos = new javax.swing.JTable();

        tablaLibrosDisponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaLibrosDisponibles);

        botonPedirPrestado.setText("Pedir Prestado");
        botonPedirPrestado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPedirPrestadoActionPerformed(evt);
            }
        });

        jLabel1.setText("Libros disponibles");

        botonCerrarSesion.setText("Cerrar sesión");
        botonCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCerrarSesionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addComponent(botonPedirPrestado)
                .addContainerGap(189, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonCerrarSesion)
                .addGap(63, 63, 63))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(22, 22, 22)
                .addComponent(botonCerrarSesion)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(botonPedirPrestado)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Disponibles", jPanel1);

        tablaLibrosPrestados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaLibrosPrestados);

        jLabel2.setText("Libros Prestados");

        botonDevolverLibro.setText("Devolver");
        botonDevolverLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDevolverLibroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(jLabel2)
                        .addGap(0, 217, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(botonDevolverLibro)
                .addGap(252, 252, 252))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addGap(72, 72, 72)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(botonDevolverLibro)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Prestados", jPanel2);

        tablaLibrosDevueltos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tablaLibrosDevueltos);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(124, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Devueltos", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1)
                .addGap(47, 47, 47))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void botonPedirPrestadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPedirPrestadoActionPerformed
        int filaSeleccionada = tablaLibrosDisponibles.getSelectedRow();
        if (filaSeleccionada < 0) {
            JOptionPane.showMessageDialog(this, "Seleccione un libro disponible", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Se asume que la columna 2 contiene el ISBN
        String isbn = modeloDisponibles.getValueAt(filaSeleccionada, 2).toString();

        // Verificar si el libro ya está en la lista de prestados
        for (Libro l : usuario.getLibrosPrestados()) {
            if (l.getIsbn().equals(isbn)) {
                JOptionPane.showMessageDialog(this, "Ya tienes prestado este libro", "Información", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        }

        // Si no se encuentra, se añade a la lista de libros prestados
        Libro libroSeleccionado = controladorLibro.buscarLibroPorISBN(isbn);
        if (libroSeleccionado != null) {
            usuario.getLibrosPrestados().add(libroSeleccionado);
            JOptionPane.showMessageDialog(this, "Libro prestado correctamente");
            actualizarTablaPrestados();
        }
    }//GEN-LAST:event_botonPedirPrestadoActionPerformed

    private void botonDevolverLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDevolverLibroActionPerformed
        int filaSeleccionada = tablaLibrosPrestados.getSelectedRow();
        if (filaSeleccionada < 0) {
            JOptionPane.showMessageDialog(this, "Seleccione un libro para devolver", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Se asume que la columna 2 contiene el ISBN
        String isbn = modeloPrestados.getValueAt(filaSeleccionada, 2).toString();

        Libro libroADevolver = null;
        for (Libro l : usuario.getLibrosPrestados()) {
            if (l.getIsbn().equals(isbn)) {
                libroADevolver = l;
                break;
            }
        }
        if (libroADevolver != null) {
            usuario.getLibrosPrestados().remove(libroADevolver);
            usuario.getLibrosDevueltos().add(libroADevolver);
            JOptionPane.showMessageDialog(this, "Libro devuelto correctamente");
            actualizarTablaPrestados();
            actualizarTablaDevueltos();
        }
    }//GEN-LAST:event_botonDevolverLibroActionPerformed

    private void botonCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCerrarSesionActionPerformed
                int confirmacion = JOptionPane.showConfirmDialog(this,
                "¿Desea cerrar sesión?", "Cerrar sesión", JOptionPane.YES_NO_OPTION);
        if (confirmacion == JOptionPane.YES_OPTION) {
            // Se obtiene el contenedor padre, que es el JTabbedPane donde está agregado este panel.
            Container parent = this.getParent();
            if (parent instanceof JTabbedPane) {
                JTabbedPane tabbedPane = (JTabbedPane) parent;
                // Se elimina este dashboard (la pestaña actual)
                tabbedPane.remove(this);
                // Se selecciona la pestaña principal. Asumiremos que la pestaña 0 es "Registro" o "Login"
                tabbedPane.setSelectedIndex(0);
            }
        }
    }//GEN-LAST:event_botonCerrarSesionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCerrarSesion;
    private javax.swing.JButton botonDevolverLibro;
    private javax.swing.JButton botonPedirPrestado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tablaLibrosDevueltos;
    private javax.swing.JTable tablaLibrosDisponibles;
    private javax.swing.JTable tablaLibrosPrestados;
    // End of variables declaration//GEN-END:variables
}
